if filereadable("/etc/vim/vimrc")
	. "/etc/vim/vimrc"
endif

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------

inoremap # X<BS>#
set autoindent             " automatic indent new lines
set formatoptions+=tnbl
set noexpandtab
set nofoldenable
set shiftwidth=2           " ..
set smartindent            " be smart about it
set softtabstop=2          " yep, two
set tabstop=4
set textwidth=80           " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" exit to normal mode with 'jj'
inoremap jj <ESC>


" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

command! Q  quit
command! W  write
command! Wq wq

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set background=dark
set backspace=2            " allow backspacing over everything in insert mode
set nolazyredraw           " turn off lazy redraw
set noshowcmd              " don't display incomplete commands
set nostartofline          " don't jump to the start of line when scrolling
set report=0               " tell us about changes
set ruler                  " show the cursor position all the time
set shortmess=filtIoOA     " shorten messages
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set previewheight=17
set scrolloff=2
syntax on
filetype plugin indent on

let g:zenburn_high_Contrast=1
colorscheme zenburn

" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set nohlsearch             " don't highlight searches
set visualbell             " shut the fuck up
set hidden
set nobk


" ---------------------------------------------------------------------------
"  Strip all trailing whitespace in file
" ---------------------------------------------------------------------------

function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction
map ,s :call StripWhitespace ()<CR>

" site specific
if filereadable(expand("~/.vim/local/" . hostname() . ".vim"))
	exec "source " . expand("~/.vim/local/" . hostname() . ".vim")
endif

